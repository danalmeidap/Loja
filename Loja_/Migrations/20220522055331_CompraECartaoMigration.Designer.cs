// <auto-generated />
using System;
using Loja_.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Loja_.Migrations
{
    [DbContext(typeof(LojaContext))]
    [Migration("20220522055331_CompraECartaoMigration")]
    partial class CompraECartaoMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Loja_.Models.Entitys.CartaoCredito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("BandeiraCartao")
                        .HasColumnType("text");

                    b.Property<string>("CodigoSeguranca")
                        .HasColumnType("text");

                    b.Property<string>("DataExpiracao")
                        .HasColumnType("text");

                    b.Property<string>("NumeroCartao")
                        .HasColumnType("text");

                    b.Property<string>("TitularCartao")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("cartaoCreditos");
                });

            modelBuilder.Entity("Loja_.Models.Entitys.Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CartaoId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataDeCompra")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("integer");

                    b.Property<int>("QuantidadeComprada")
                        .HasColumnType("integer");

                    b.Property<int?>("cartaoCreditoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.HasIndex("cartaoCreditoId");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("Loja_.Models.Entitys.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("DataDeAdicao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("NomeProduto")
                        .HasColumnType("text");

                    b.Property<int>("QuantidadeProduto")
                        .HasColumnType("integer");

                    b.Property<double>("ValorProduto")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("Loja_.Models.Entitys.Compra", b =>
                {
                    b.HasOne("Loja_.Models.Entitys.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Loja_.Models.Entitys.CartaoCredito", "cartaoCredito")
                        .WithMany()
                        .HasForeignKey("cartaoCreditoId");

                    b.Navigation("cartaoCredito");

                    b.Navigation("Produto");
                });
#pragma warning restore 612, 618
        }
    }
}
